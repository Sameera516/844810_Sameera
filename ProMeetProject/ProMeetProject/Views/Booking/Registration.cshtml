@model ProMeetProject.Models.Booking

@{
    ViewBag.Title = "Registration";
}

@if (ViewBag.Status != null && Convert.ToBoolean(ViewBag.Status))
{
    if (ViewBag.Message != null)
    {
        <div class="alert alert-success">
            <strong>@ViewBag.Message</strong><br/>
            @Html.ActionLink("Log out","Index","Home")
        </div>
    }

}


else
{
    using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h3>Book A Room</h3>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Emp_Id, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Emp_Id, new { htmlAttributes = new { @class = "form-control" }, autocomplete = "off" })
                    @Html.ValidationMessageFor(model => model.Emp_Id, "", new { @class = "text-danger" })
                    @Html.ValidationMessage("EmpId Not exists", new { @class = "text-danger" })

                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Emp_Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Emp_Name, new { htmlAttributes = new { @class = "form-control" }, autocomplete = "off" })
                    @Html.ValidationMessageFor(model => model.Emp_Name, "", new { @class = "text-danger" })
                    @Html.ValidationMessage("EmpName Not exists", new { @class = "text-danger" })

                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Emp_Email_Id, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Emp_Email_Id, new { htmlAttributes = new { @class = "form-control" }, autocomplete = "off" })
                    @Html.ValidationMessageFor(model => model.Emp_Email_Id, "", new { @class = "text-danger" })
                    @Html.ValidationMessage("Emp_Email Not exists", new { @class = "text-danger" })

                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.room_id, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.room_id, new { htmlAttributes = new { @class = "form-control" }, autocomplete = "off" })
                    @Html.ValidationMessageFor(model => model.room_id, "", new { @class = "text-danger" })
                    @Html.ValidationMessage("room id Not exists", new { @class = "text-danger" })

                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.location, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.location, new { htmlAttributes = new { @class = "form-control" }, autocomplete = "off" })
                    @Html.ValidationMessageFor(model => model.location, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DateTime, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DateTime, new { htmlAttributes = new { @class = "form-control" }, autocomplete = "off" })
                    @Html.ValidationMessageFor(model => model.DateTime, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Duration, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Duration, new { htmlAttributes = new { @class = "form-control" }, autocomplete = "off" })
                    @Html.ValidationMessageFor(model => model.Duration, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Payment_money, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Payment_money, new { htmlAttributes = new { @class = "form-control" }, autocomplete = "off" })
                    @Html.ValidationMessageFor(model => model.Payment_money, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Card_Number, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Card_Number, new { htmlAttributes = new { @class = "form-control" }, autocomplete = "off" })
                    @Html.ValidationMessageFor(model => model.Card_Number, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.expiry_month, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.expiry_month, new { htmlAttributes = new { @class = "form-control" }, autocomplete = "off" })
                    @Html.ValidationMessageFor(model => model.expiry_month, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.expiry_year, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.expiry_year, new { htmlAttributes = new { @class = "form-control" }, autocomplete = "off" })
                    @Html.ValidationMessageFor(model => model.expiry_year, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.cvv, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.cvv, new { htmlAttributes = new { @class = "form-control" }, autocomplete = "off" })
                    @Html.ValidationMessageFor(model => model.cvv, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Name_on_the_card, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name_on_the_card, new { htmlAttributes = new { @class = "form-control" }, autocomplete = "off" })
                    @Html.ValidationMessageFor(model => model.Name_on_the_card, "", new { @class = "text-danger" })
                </div>
            </div>



            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Book Room" class="btn btn-default" />
                </div>
            </div>
        </div>
        if (ViewBag.Message != null)
        {
            <div class="alert alert-danger">
                <strong>Error!</strong>@ViewBag.Message
            </div>
        }


    }
}


@section Scripts
{
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
}